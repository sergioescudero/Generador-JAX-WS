<?xml version="1.0"?> 
	
	<!-- base directory -->
    <project name="MockupPalestraWS" default="CommonsPalestra" basedir="./"> 
    <property file="antBuild.properties" />
    
    <!-- SimuladorObtencionFicheroLogs_Servidor (SOFL) -->
    <property name="sofl_servidor" value="../${proyecto.servicioweb.servidor.nombre}"/>
    
    <!-- WSGEN -->
    <!-- Root of classpath in which the web service class can be found. --> 
    <property name="sofl_class-dir" value="${sofl_servidor}/build/classes/"/>
    <!-- Default output directory for wsgen. --> 
    <property name="sofl_wsgen-outdir" value="${sofl_servidor}/wsgenResults/"/>  
    <!-- Default output directory for artifacts generated by wsgen. --> 
    <property name="sofl_artifacts-outdir" value="${sofl_wsgen-outdir}/artifacts/"/> 
    <!-- Directory to which WSDL document will be written by wsgen. --> 
    <property name="sofl_wsdl-outdir" value="${sofl_wsgen-outdir}/wsdl"/> 
    <!-- Directory to which generated sourcefiles will be written by wsgen. --> 
    <property name="sofl_src-outdir" value="${sofl_wsgen-outdir}/src/"/> 
    <!-- Directory to which generated classfiles will be written by wsgen. --> 
    <property name="sofl_gen-classdir" value="${sofl_wsgen-outdir}/class/"/> 
	<!-- class that contains WS implementation -->
    <property name="sofl_endPoint-Class" 
        value="${servicioweb.servicioweb.servidor.class}"/> 
        
	<!-- path to wsgen -->
	<property name="wsgen-path" value="${wsgen.ruta}"/>
	<!-- wsgen executable -->
	<property name="wsgen-runable" value="${wsgen-path}/${wsgen.ejecutable}"/>
	
	<!-- WSIMPORT -->
	<!-- path to wsimport -->
	<property name="wsimport-path" value="${wsimport.ruta}"/>
	<!-- wsgen executable -->
	<property name="wsimport-runable" value="${wsimport-path}/${wsimport.ejecutable}"/>
	<!-- client dir -->
	<property name="ofl_client-dir" value="../${proyecto.servicioweb.cliente.nombre}/"/>
	<!-- Root of src. --> 
    <property name="ofl_client-src-dir" value="${ofl_client-dir}/src/"/>
    <!-- path to WSDL -->
    <property name="ofl_relative-path-wsdl" value="${sofl_servidor}/wsgenResults/wsdl/"/>
    <!-- path WSDL -->
    <property name="ofl_file-wsdl" value="${ofl_relative-path-wsdl}/${servicioweb.servicioweb.servidor.nombre}.wsdl"/>
    <property name="ofl_url-wsdl" value="${url.ws.host}/${servicioweb.servicioweb.servidor.nombre}${url.ws.wsdl}"/>
    	    	
    <!-- WS ASYNC -->
   	<property name="async_endPoint-Class" 
    	        value="${servicioweb.async.class}"/> 
    <property name="asyncResponse_endPoint-Class" 
    	    	value="${servicioweb.async.response.class}"/> 
    <property name="asyncResponse_file-wsdl" value="${ofl_relative-path-wsdl}/${servicioweb.async.response.wsdl}"/>	
   	<property name="asyncResponse_src-dir" value="${sofl_servidor}/src"/>


    <target name="GenerarWSDL"> 
    	<echo message="calling the web services generation task wsgen" /> 
        <exec executable="${wsgen-runable}"> 
            <arg value="-verbose"/> 
            <!-- Set the classpath. --> 
            <arg value="-classpath"/> 
            <arg value="${sofl_class-dir}"/> 
            <!-- Generate a WSDL file. --> 
            <arg value="-wsdl"/> 
            <!-- Specify where to write other generated files. --> 
            <arg value="-d"/> 
            <arg value="${sofl_artifacts-outdir}"/> 
            <!-- Specify where to write WSDL and XML schema files. --> 
            <arg value="-r"/> 
            <arg value="${sofl_wsdl-outdir}"/> 
            <!-- Specify where to write generated source files. --> 
            <arg value="-s"/> 
            <arg value="${sofl_src-outdir}"/> 
            <!-- Keep generated source files. --> 
            <arg value="-keep"/> 
            <!-- Specify service endpoint interface/class. --> 
            <arg value="${sofl_endPoint-Class}" /> 
        </exec> 
    </target>
    	
   	<target name="GenerarWSDLAsync"> 
    	<echo message="calling the web services generation task wsgen" /> 
        <exec executable="${wsgen-runable}"> 
            <arg value="-verbose"/> 
            <!-- Set the classpath. --> 
            <arg value="-classpath"/> 
            <arg value="${sofl_class-dir}"/> 
            <!-- Generate a WSDL file. --> 
            <arg value="-wsdl"/> 
            <!-- Specify where to write other generated files. --> 
            <arg value="-d"/> 
            <arg value="${sofl_artifacts-outdir}"/> 
            <!-- Specify where to write WSDL and XML schema files. --> 
            <arg value="-r"/> 
            <arg value="${sofl_wsdl-outdir}"/> 
            <!-- Specify where to write generated source files. --> 
            <arg value="-s"/> 
            <arg value="${sofl_src-outdir}"/> 
            <!-- Keep generated source files. --> 
            <arg value="-keep"/> 
            <!-- Specify service endpoint interface/class. --> 
            <arg value="${async_endPoint-Class}" /> 
        </exec> 
    </target> 
    	
	<target name="GenerarWSDLAsyncResponse"> 
	    	<echo message="calling the web services generation task wsgen" /> 
	        <exec executable="${wsgen-runable}"> 
	            <arg value="-verbose"/> 
	            <!-- Set the classpath. --> 
	            <arg value="-classpath"/> 
	            <arg value="${sofl_class-dir}"/> 
	            <!-- Generate a WSDL file. --> 
	            <arg value="-wsdl"/> 
	            <!-- Specify where to write other generated files. --> 
	            <arg value="-d"/> 
	            <arg value="${sofl_artifacts-outdir}"/> 
	            <!-- Specify where to write WSDL and XML schema files. --> 
	            <arg value="-r"/> 
	            <arg value="${sofl_wsdl-outdir}"/> 
	            <!-- Specify where to write generated source files. --> 
	            <arg value="-s"/> 
	            <arg value="${sofl_src-outdir}"/> 
	            <!-- Keep generated source files. --> 
	            <arg value="-keep"/> 
	            <!-- Specify service endpoint interface/class. --> 
	            <arg value="${asyncResponse_endPoint-Class}" /> 
	        </exec> 
	    </target> 
    	
    
    <target name="GenerarClasesJAVA_URL">
    	<echo message="calling the java class generation task wsimport" /> 
    	<exec executable="${wsimport-runable}"> 
            <arg value="-verbose"/> 
            <!-- Set the classpath. --> 
            <arg value="-d"/> 
            <arg value="${ofl_client-src-dir}"/> 
            <!-- Keep generated source files. --> 
            <arg value="-keep"/> 
            <!-- path to wsdl -->
            <arg value="${ofl_url-wsdl}" /> 
        </exec> 
    </target>
    	
    <target name="GenerarClasesJAVA_FILE">
    	<echo message="calling the java class generation task wsimport" /> 
    	<exec executable="${wsimport-runable}"> 
    		<arg value="-verbose"/> 
    	    <!-- Set the classpath. --> 
    	    <arg value="-d"/> 
    	    <arg value="${ofl_client-src-dir}"/> 
    	    <!-- Keep generated source files. --> 
    	    <arg value="-keep"/> 
    	    <!-- path to wsdl -->
    	    <arg value="${ofl_file-wsdl}" /> 
    	 </exec> 
	</target>  
    	
	<target name="GenerarClasesAsyncJAVA_FILE">
    	<echo message="calling the java class generation task wsimport" /> 
    	<exec executable="${wsimport-runable}"> 
    		<arg value="-verbose"/> 
    	    <!-- Set the classpath. --> 
    	    <arg value="-s"/> 
    	    <arg value="${asyncResponse_src-dir}"/> 
    	    <!-- Keep generated source files. --> 
    	    <arg value="-keep"/> 
    	    <!-- path to wsdl -->
    	    <arg value="${asyncResponse_file-wsdl}" /> 
    	 </exec> 
	</target>  
    	    	
	<target name="clean" 
    	    description="Destroys all generated files and dirs.">
   		<delete includeemptydirs="true">
    		<fileset dir="${sofl_artifacts-outdir}" includes="**/*"/>
    	</delete>
    	<delete includeemptydirs="true">
    		<fileset dir="${sofl_wsdl-outdir}" includes="**/*"/>
    	</delete>
   		<delete includeemptydirs="true">
   			<fileset dir="${sofl_src-outdir}" includes="**/*"/>
   		</delete>
    </target>

    
    <target name="CommonsPalestra" depends="clean, GenerarWSDL, GenerarClasesJAVA_FILE">
    	<echo message="wsdl and classes generation task"/>
    </target>

</project>