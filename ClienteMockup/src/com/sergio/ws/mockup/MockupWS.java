
package com.sergio.ws.mockup;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MockupWS", targetNamespace = "http://ws.sergio.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MockupWS {


    /**
     * 
     * @param sessionGuid
     * @param parametro02
     * @param parametro01
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "resultadoOperacion", targetNamespace = "")
    @RequestWrapper(localName = "ejecutarMetodoWS", targetNamespace = "http://ws.sergio.com/", className = "com.sergio.ws.mockup.EjecutarMetodoWS")
    @ResponseWrapper(localName = "ejecutarMetodoWSResponse", targetNamespace = "http://ws.sergio.com/", className = "com.sergio.ws.mockup.EjecutarMetodoWSResponse")
    @Action(input = "http://ws.sergio.com/MockupWS/ejecutarMetodoWSRequest", output = "http://ws.sergio.com/MockupWS/ejecutarMetodoWSResponse")
    public String ejecutarMetodoWS(
        @WebParam(name = "sessionGuid", targetNamespace = "")
        String sessionGuid,
        @WebParam(name = "parametro01", targetNamespace = "")
        String parametro01,
        @WebParam(name = "parametro02", targetNamespace = "")
        String parametro02);

}
